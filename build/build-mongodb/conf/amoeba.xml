<?xml version="1.0" encoding="gbk"?>

<!DOCTYPE amoeba:configuration SYSTEM "amoeba.dtd">
<amoeba:configuration xmlns:amoeba="http://amoeba.meidusa.com/">

	<proxy>
		
		<!-- server class must be extend java.lang.Thread -->
		<server class="com.meidusa.amoeba.net.ServerableConnectionManager">
			<!-- proxy server绑定的端口 -->
			<property name="port">8066</property>
			
			<!-- proxy server绑定的IP -->
			<!-- 
			<property name="ipAddress">127.0.0.1</property>
			 -->
			
			<!-- query timeout( default: 60 second , TimeUnit:second) -->
			
			<property name="manager">${serverSideManager}</property>
			<property name="connectionFactory">
				<bean class="com.meidusa.amoeba.mongodb.net.MongodbClientConnectionFactory"></bean>
			</property>
			
			<!-- 
			<property name="authenticator">
				<bean class="com.meidusa.amoeba.mongodb.net.MongodbClientConnectionFactory"></bean>
			</property>
			 -->
			
		</server>
		
		<!-- 
		<authenticator class="">
			<property name="user">root</property>
			<property name="password">password</property>
		</authenticator>
		 -->
		 
		<runtime class="com.meidusa.amoeba.context.RuntimeContext">
			<!-- proxy server net IO Read thread size -->
			<property name="readThreadPoolSize">20</property>
			
			<!-- proxy server client process thread size -->
			<property name="clientSideThreadPoolSize">30</property>
			
			<!-- mysql server data packet process thread size -->
			<property name="serverSideThreadPoolSize">30</property>
			
			<property name="queryTimeout">60</property>
		</runtime>
	
	</proxy>
	
	<!-- 
		每个ConnectionManager都将作为一个线程启动。
		manager负责Connection IO读写/死亡检测
	-->
	<connectionManagerList>
	
		<connectionManager name="serverSideManager" class="com.meidusa.amoeba.net.MultiConnectionManagerWrapper">
			<property name="subManagerClassName">com.meidusa.amoeba.net.ConnectionManager</property>
			<!-- 
			  default value is avaliable Processors 
			<property name="processors">5</property>
			 -->
		</connectionManager>
		
		<connectionManager name="defaultManager" class="com.meidusa.amoeba.net.MultiConnectionManagerWrapper">
			<property name="subManagerClassName">com.meidusa.amoeba.net.ConnectionManager</property>
			
			<!-- 
			  default value is avaliable Processors 
			<property name="processors">5</property>
			 -->
		</connectionManager>
	</connectionManagerList>
	
	<dbServerList>
		<!-- 
			一台mysqlServer 需要配置一个pool，
			如果多台 平等的mysql需要进行loadBalance， 
			平台已经提供一个具有负载均衡能力的objectPool：com.meidusa.amoeba.mysql.server.MultipleServerPool
			简单的配置是属性加上 virtual="true",该Pool 不允许配置factoryConfig
			或者自己写一个ObjectPool。
		-->
		<dbServer name="abstractServer" abstractive="true">
			
			<!-- PoolableObjectFactory实现类 -->
			<factoryConfig class="com.meidusa.amoeba.mongodb.net.MongodbServerConnectionFactory">
				<property name="manager">defaultManager</property>
				<property name="ipAddress">127.0.0.1</property>
			</factoryConfig>
			<poolConfig class="com.meidusa.amoeba.net.poolable.PoolableObjectPool">
				<property name="maxActive">200</property>
				<property name="maxIdle">200</property>
				<property name="minIdle">10</property>
				<property name="minEvictableIdleTimeMillis">600000</property>
				<property name="timeBetweenEvictionRunsMillis">600000</property>
				<property name="testOnBorrow">true</property>
				<property name="testWhileIdle">true</property>
			</poolConfig>
		</dbServer>
		
		<dbServer name="server0" parent="abstractServer">
			<factoryConfig class="com.meidusa.amoeba.mongodb.net.MongodbServerConnectionFactory">
				<property name="manager">defaultManager</property>
				<property name="port">27017</property>
			</factoryConfig>
		</dbServer>
		
		<dbServer name="multiPool" virtual="true">
			<poolConfig class="com.meidusa.amoeba.server.MultipleServerPool">
				<!-- 负载均衡参数 1=ROUNDROBIN , 2=WEIGHTBASED , 3=HA-->
				<property name="loadbalance">1</property>
				
				<!-- 参与该pool负载均衡的poolName列表以逗号分割 -->
				<property name="poolNames">server0</property>
			</poolConfig>
		</dbServer>
		
	</dbServerList>
	
	<queryRouter class="com.meidusa.amoeba.mongodb.route.MongodbQueryRouter">
		<property name="ruleConfig">${amoeba.home}/conf/rule.xml</property>
		<property name="functionConfig">${amoeba.home}/conf/functionMap.xml</property>
		<property name="ruleFunctionConfig">${amoeba.home}/conf/ruleFunctionMap.xml</property>
		<property name="LRUMapSize">1500</property>
		<property name="defaultPool">server0</property>
		
		<!--
		<property name="writePool">server1</property>
		<property name="readPool">server1</property>
		-->
		<property name="needParse">true</property>
	</queryRouter>
</amoeba:configuration>



